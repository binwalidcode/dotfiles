# js
# Autogenerated from man page /usr/share/man/man1/js.1.gz
complete -c js -l abort-on-uncaught-exception -d 'Aborting instead of exiting causes a core file to be generated for analysis'
complete -c js -l completion-bash -d 'Print source-able bash completion script for Node. js'
complete -c js -l enable-fips -d 'Enable FIPS-compliant crypto at startup.  Requires Node. js to be built with '
complete -c js -l experimental-modules -d 'Enable experimental ES module support and caching modules'
complete -c js -l experimental-repl-await -d 'Enable experimental top-level await keyword support in REPL'
complete -c js -l experimental-vm-modules -d 'Enable experimental ES module support in VM module'
complete -c js -l experimental-worker -d 'Enable experimental worker threads using worker_threads module'
complete -c js -l force-fips -d 'Force FIPS-compliant crypto on startup (Cannot be disabled from script code)'
complete -c js -l http-parser -d 'Chooses an HTTP parser library.  Available values are llhttp or legacy'
complete -c js -l icu-data-dir -d 'Specify ICU data load path.  Overrides NODE_ICU_DATA'
complete -c js -l inspect-brk -d 'Activate inspector on host:port and break at start of user script'
complete -c js -l inspect-port -d 'Set the host:port to be used when the inspector is activated'
complete -c js -l inspect -d 'Activate inspector on host:port.  Default is 127. 0. 0. 1:9229'
complete -c js -l loader -d 'Specify the file as a custom loader, to load -experimental-modules'
complete -c js -l insecure-http-parser -d 'Use an insecure HTTP parser that accepts invalid HTTP headers'
complete -c js -l max-http-header-size -d 'Specify the maximum size of HTTP headers in bytes.  Defaults to 8KB'
complete -c js -l napi-modules -d 'This option is a no-op.  It is kept for compatibility'
complete -c js -l no-deprecation -d 'Silence deprecation warnings'
complete -c js -l no-force-async-hooks-checks -d 'Disable runtime checks for `async_hooks`'
complete -c js -l no-warnings -d 'Silence all process warnings (including deprecations)'
complete -c js -l openssl-config -d 'Load an OpenSSL configuration file on startup'
complete -c js -l pending-deprecation -d 'Emit pending deprecation warnings'
complete -c js -l preserve-symlinks -d 'Instructs the module loader to preserve symbolic links when resolving and cac…'
complete -c js -l preserve-symlinks-main -d 'Instructs the module loader to preserve symbolic links when resolving and cac…'
complete -c js -l prof -d 'Generate V8 profiler output'
complete -c js -l prof-process -d 'Process V8 profiler output generated using the V8 option -prof'
complete -c js -l redirect-warnings -d 'Write process warnings to the given file instead of printing to stderr'
complete -c js -l throw-deprecation -d 'Throw errors for deprecations'
complete -c js -l title -d 'Specify process. title on startup'
complete -c js -l tls-cipher-list -d 'Specify an alternative default TLS cipher list.  Requires Node'
complete -c js -l trace-deprecation -d 'Print stack traces for deprecations'
complete -c js -l trace-event-categories -d 'A comma-separated list of categories that should be traced when trace event t…'
complete -c js -l trace-event-file-pattern -d 'Template string specifying the filepath for the trace event data, it supports…'
complete -c js -l trace-events-enabled -d 'Enable the collection of trace event tracing information'
complete -c js -l trace-sync-io -d 'Print a stack trace whenever synchronous I/O is detected after the first turn…'
complete -c js -l trace-warnings -d 'Print stack traces for process warnings (including deprecations)'
complete -c js -l track-heap-objects -d 'Track heap object allocations for heap snapshots'
complete -c js -l -unhandled-rejections -d 'Define the behavior for unhandled rejections'
complete -c js -l use-bundled-ca -d 'Use bundled Mozilla CA store as supplied by current Node'
complete -c js -l v8-options -d 'Print V8 command-line options'
complete -c js -l v8-pool-size -d 'Set V8\'s thread pool size which will be used to allocate background jobs'
complete -c js -l zero-fill-buffers -d 'Automatically zero-fills all newly allocated Buffer and SlowBuffer instances'
complete -c js -s c -d 'Check the script\'s syntax without executing it'
complete -c js -s e -d 'Evaluate string as JavaScript'
complete -c js -s h -d 'Print command-line options'
complete -c js -s i -d 'Open the REPL even if stdin does not appear to be a terminal'
complete -c js -s p -d 'Identical to e, but prints the result'
complete -c js -s r -d 'Preload the specified module at startup'
complete -c js -s v -d 'Print node\'s version.  El ENVIRONMENT -tag -width 6n NODE_DEBUG Ar modules'

